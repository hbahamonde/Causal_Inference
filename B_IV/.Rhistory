library(AER)
data(CigarettesSW) # carguemos la base
head(CigarettesSW) # mostremos un poco la base
# Preparemos los datos
CigarettesSW$real.price = CigarettesSW$price / CigarettesSW$cpi # calculemos el precio real
CigarettesSW$log.precio = log(CigarettesSW$real.price) # log # PRECIO (X)
CigarettesSW$log.impuesto = log(CigarettesSW$tax) # log IMPUESTOS (Z)
CigarettesSW$log.cantidad = log(CigarettesSW$packs) # log CANTIDAD (Y)
# Plotiemos los datos
pairs(~log.precio+log.cantidad+log.impuesto,data=CigarettesSW, main="Scatterplot Matrix")
cor(residuals.ols, CigarettesSW$log.cantidad) # Estan correlacionados? Por que?
# Veamos
## Paso 0. Veamos primero si tenemos un problema: Estan los residuos del modelo Precio ~ Cantidad relacionados con Precio?
residuals.ols = as.numeric(lm(log.cantidad ~ log.precio , CigarettesSW)$residuals)
cor(residuals.ols, CigarettesSW$log.cantidad) # Estan correlacionados? Por que?
# Supuesto 1
cor(CigarettesSW$log.impuesto,CigarettesSW$log.precio)
# Supuesto 2
cor(CigarettesSW$log.impuesto,CigarettesSW$log.cantidad) # ???
# Supuesto 3
options(scipen=9999999)
summary(lm(log.impuesto ~ log.precio, CigarettesSW))
## Primera Etapa
first.s = lm(log.impuesto ~ log.precio, CigarettesSW)
first.s
z.hat = first.s$fitted.values # Predicciones
z.hat
mean(z.hat)
predict(first.s)
mean(predict(first.s))
CigarettesSW$z.hat <- z.hat
## Segunda etapa
second.s = lm(log.cantidad ~ z.hat, CigarettesSW)
summary(second.s)
iv.reg = ivreg(log.cantidad ~ log.precio | log.impuesto , data = CigarettesSW)
summary(iv.reg)
summary(second.s)
summary(iv.reg)
library(texreg)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
summary(iv.reg, vcov = sandwich, diagnostics = TRUE)
summary(iv.reg, vcov = sandwich)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
## Primera Etapa
first.s = lm(log.impuesto ~ log.precio, CigarettesSW)
z.hat = predict(first.s) # Predicciones (como se sacarian a mano?)
CigarettesSW$z.hat <- z.hat
## Segunda etapa
second.s = lm(log.cantidad ~ z.hat + log.impuesto, CigarettesSW)
summary(second.s)
# OK, el coeficiente asociado a z.hat debiera no estar sesgado.
####################################################
# 2SLS via "ivreg"
####################################################
iv.reg = ivreg(log.cantidad ~ log.precio | log.impuesto , data = CigarettesSW)
summary(iv.reg, vcov = sandwich)
# Comparemos todo en una tabla
library(texreg)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
## Primera Etapa
first.s = lm(log.impuesto ~ log.precio, CigarettesSW)
z.hat = predict(first.s) # Predicciones (como se sacarian a mano?)
CigarettesSW$z.hat <- z.hat
## Segunda etapa
second.s = lm(log.cantidad ~ z.hat, CigarettesSW)
summary(second.s)
# OK, el coeficiente asociado a z.hat debiera no estar sesgado.
####################################################
# 2SLS via "ivreg"
####################################################
iv.reg = ivreg(log.cantidad ~ log.precio | log.impuesto + log.precio , data = CigarettesSW)
summary(iv.reg, vcov = sandwich)
# Comparemos todo en una tabla
library(texreg)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
stage1<-predict(lm(hp~cyl+disp,data=mtcars))
mtcars$stage1<-stage1
stage2<-lm(mpg~stage1+disp,data=mtcars)
ivreg.good<-ivreg(mpg~disp+hp|cyl+disp,data=mtcars)
summary(stage2)
summary(ivreg.bad)
summary(ivreg.good)
head(mtcars)
help(mtcars)
# #let cyl be an instrument for hp
stage1<-predict(lm(hp~cyl,data=mtcars))
mtcars$stage1<-stage1
stage2<-lm(mpg~stage1,data=mtcars)
ivreg.good<-ivreg(mpg~hp|cyl,data=mtcars)
summary(stage2)
summary(ivreg.good)
# let log.precio be an instrument for log.impuesto
stage1<-predict(lm(log.impuesto~log.precio,data=CigarettesSW))
CigarettesSW$stage1<-stage1
stage2<-lm(log.cantidad~stage1,data=CigarettesSW)
ivreg.good<-ivreg(log.cantidad~log.impuesto|log.precio,data=CigarettesSW)
summary(stage2)
summary(ivreg.good)
screenreg(list(stage2,ivreg.good)) # Que vemos (punto de los logs).
## Primera Etapa
first.s = lm(log.impuesto~log.precio,data=CigarettesSW)
z.hat = predict(first.s) # Predicciones (como se sacarian a mano?)
CigarettesSW$z.hat <- z.hat
## Segunda etapa
second.s = lm(log.cantidad~z.hat,data=CigarettesSW)
summary(second.s)
# OK, el coeficiente asociado a z.hat debiera no estar sesgado.
####################################################
# 2SLS via "ivreg"
####################################################
iv.reg = ivreg(log.cantidad~log.impuesto|log.precio,data=CigarettesSW)
summary(iv.reg, vcov = sandwich)
# Comparemos todo en una tabla
library(texreg)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
## Primera Etapa
first.s = lm(log.impuesto~log.precio,data=CigarettesSW)
z.hat = predict(first.s) # Predicciones (como se sacarian a mano?)
CigarettesSW$z.hat <- z.hat
## Segunda etapa
second.s = lm(log.cantidad~z.hat,data=CigarettesSW)
summary(second.s)
# OK, el coeficiente asociado a z.hat debiera no estar sesgado.
####################################################
# 2SLS via "ivreg"
####################################################
iv.reg = ivreg(log.cantidad~log.impuesto|log.precio,data=CigarettesSW)
summary(iv.reg)
# Comparemos todo en una tabla
library(texreg)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
library(AER)
data(CigarettesSW) # carguemos la base
head(CigarettesSW) # mostremos un poco la base
hist(CigarettesSW$population)
hist(log(CigarettesSW$population))
hist(CigarettesSW$income)
hist(log(CigarettesSW$income))
# Preparemos los datos
CigarettesSW$real.price = CigarettesSW$price / CigarettesSW$cpi # calculemos el precio real
CigarettesSW$log.precio = log(CigarettesSW$real.price) # log # PRECIO (X)
CigarettesSW$tax
log(CigarettesSW$tax)
hit(CigarettesSW$tax)
hist(CigarettesSW$tax)
hist(log(CigarettesSW$tax))
CigarettesSW$real.price = CigarettesSW$price / CigarettesSW$cpi # calculemos el precio real
CigarettesSW$log.precio = log(CigarettesSW$real.price) # log # PRECIO (X)
CigarettesSW$log.impuesto = log(CigarettesSW$tax) # log IMPUESTOS (Z)
CigarettesSW$log.cantidad = log(CigarettesSW$packs) # log CANTIDAD (Y)
# Plotiemos los datos
pairs(~log.precio+log.cantidad+log.impuesto,data=CigarettesSW, main="Scatterplot Matrix")
?pairs
summary(lm(log.cantidad ~ log.precio , CigarettesSW))
as.numeric(lm(log.cantidad ~ log.precio , CigarettesSW)$residuals)
# Veamos
## Paso 0. Veamos primero si tenemos un problema: Estan los residuos del modelo Precio ~ Cantidad relacionados con Precio?
residuals.ols = as.numeric(lm(log.cantidad ~ log.precio , CigarettesSW)$residuals)
residuals.ols
mean(residuals.ols)
options(scipen=100000000)
cor(residuals.ols, CigarettesSW$log.cantidad) # Estan correlacionados? Por que?
mean(residuals.ols)
cor(residuals.ols, CigarettesSW$log.cantidad) # Estan correlacionados? Por que?
residuals.ols
CigarettesSW$log.impuesto
# Supuesto 1
cor(CigarettesSW$log.impuesto,CigarettesSW$log.precio)
# Supuesto 2
cor(CigarettesSW$log.impuesto,CigarettesSW$log.cantidad) # ???
# Supuesto 2
cor(CigarettesSW$log.impuesto,CigarettesSW$log.cantidad) # ???
options(scipen=9999999)
summary(lm(log.impuesto ~ log.precio, CigarettesSW))
## Primera Etapa
first.s = lm(log.impuesto~log.precio,data=CigarettesSW)
predict(first.s)
as.vector(predict(first.s))
View(data.frame(
y.hat = predict(first.s),
y = CigarettesSW$log.impuesto
))
model = lm(log.impuesto~log.precio,data=CigarettesSW)
View(data.frame(
y.hat = predict(first.s),
y = CigarettesSW$log.impuesto,
e = model$residuals
))
3.481240 - 3.431394
predict(first.s)
z.hat = predict(first.s) # Predicciones (como se sacarian a mano?)
CigarettesSW$z.hat <- z.hat
colnames(CigarettesSW)
## Segunda etapa
second.s = lm(log.cantidad~z.hat,data=CigarettesSW)
summary(second.s)
iv.reg = ivreg(log.cantidad~log.impuesto|log.precio,data=CigarettesSW)
summary(iv.reg)
library(texreg)
screenreg(list(second.s,iv.reg)) # Que vemos (punto de los logs).
